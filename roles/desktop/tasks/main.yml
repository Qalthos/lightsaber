---
- name: Add swaync copr repo
  community.general.copr:
    name: erikreider/SwayNotificationCenter
    state: enabled
  become: true
  when: ansible_os_family == "RedHat" and ansible_pkg_mgr != "atomic_container"

- name: Install common desktop packages
  ansible.builtin.package:
    name: "{{ desktop_packages.common + desktop_packages[ansible_os_family] }}"
    state: installed
  become: true
  when: ansible_pkg_mgr != "atomic_container"

- name: Install uv tools
  ansible.builtin.command:
    cmd: uv tool install {{ item }}
  register: desktop_uv
  loop:
    - waypaper
  changed_when:
    - '"is already installed" not in desktop_uv.stderr'

- name: Add the flathub flatpak repository remote to the user installation
  community.general.flatpak_remote:
    name: flathub
    state: present
    flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo
    method: user

- name: Install flatpaks
  community.general.flatpak:
    name:
      - com.github.tchx84.Flatseal
      - hu.irl.cameractrls
      - org.mozilla.Thunderbird
      - org.pipewire.Helvum
    method: user
    state: present

- name: Ensure accountservice path exists
  ansible.builtin.file:
    path: /var/lib/AccountsService/icons
    mode: ug=rwx,o=rx
    state: directory

- name: Set up user avatar
  ansible.builtin.copy:
    src: avatar.png
    dest: "/var/lib/AccountsService/icons/{{ ansible_user }}"
    mode: u=rw,g=r,o=r
  become: true

- name: Create user directories
  ansible.builtin.file:
    path: "~/{{ item }}"
    mode: u=rwX,g=rX,o=rX
    state: directory
  loop:
    - files/applications
    - files/desktop
    - files/documents
    - files/downloads
    - media/music
    - media/pictures
    - media/videos

- name: Copy config files and scripts
  ansible.builtin.include_tasks: tasks/copy_filetree.yaml
  loop:
    - config
    - local
  tags:
    - dotfiles

- name: Install user services
  ansible.builtin.copy:
    src: services/
    dest: ~/.config/systemd/user/
    mode: preserve
  notify: Reload systemd

- name: Ensure services are available
  ansible.builtin.meta: flush_handlers

- name: Enable services
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    enabled: true
    scope: user
  loop:
    - kanshi.service
    - sway-xdg-autostart.target
