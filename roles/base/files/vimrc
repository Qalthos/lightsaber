set nocompatible
set autoindent
set smartindent
set textwidth=160

au BufNewFile,BufRead *.py,*.rst set tabstop=4 shiftwidth=4 expandtab
au BufNewFile,BufRead *.css,*.html,*.js,*.yaml,*.yml set tabstop=2 shiftwidth=2 expandtab

" Unmap <F1>
:map <F1> <Esc>
:imap <F1> <Esc>

"python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF

filetype indent on
syntax on
set foldmethod=syntax

" colorscheme
colorscheme Tomorrow-Night-Bright

let g:syntastic_check_on_open=1
let g:syntastic_python_checkers=['pycodestyle', 'pylint']
let g:syntastic_python_pycodestyle_post_args='--ignore=E402
\ --max-line-length=160'
let g:syntastic_python_pylint_post_args='--disable=W291,W391,W293,
\E201,E203,E225,E231,E241,E251,E261,E302,E303,E501,E741,
\missing-docstring,wrong-import-position
\ --max-line-length=160'

augroup BadWhitespace
  autocmd!
  autocmd BufRead,BufNewFile *.py,*.rst match BadWhitespace /*\t\*/
  autocmd BufRead,BufNewFile *.py,*.rst match BadWhitespace /\s\+$/
augroup END
highlight BadWhitespace ctermbg=red guibg=red

" Automatic python folding
augroup python_prog
  autocmd!
  fun! Python_fold()
    execute 'syntax clear pythonStatement'
    execute 'syntax keyword pythonStatement break continue del'
    execute 'syntax keyword pythonStatement except exec finally'
    execute 'syntax keyword pythonStatement pass print raise'
    execute 'syntax keyword pythonStatement return try'
    execute 'syntax keyword pythonStatement global assert'
    execute 'syntax keyword pythonStatement lambda yield'
    execute 'syntax match pythonStatement /\<def\>/ nextgroup=pythonFunction skipwhite'
    execute 'syntax match pythonStatement /\<class\>/ nextgroup=pythonFunction skipwhite'
    execute 'syntax region pythonFold start="^\z(\s*\)\%(class\|def\)" end="^\%(\n*\z1\s\)\@!" transparent fold'
    execute 'syntax sync minlines=2000 maxlines=4000'
    "set foldopen=all foldclose=all
    set foldtext=substitute(getline(v:foldstart),'\\t','\ \ \ \ ','g')
    set fillchars=vert:\|,fold:-
    set tabstop=4 shiftwidth=4 guioptions+=b
  endfun
  autocmd FileType python call Python_fold()
augroup END
