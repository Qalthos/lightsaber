set nocompatible
set autoindent
set smartindent
set textwidth=160

au BufNewFile,BufRead *.py,*.rst set tabstop=4 shiftwidth=4 expandtab
au BufNewFile,BufRead *.css,*.html,*.js,*.yaml,*.yml set tabstop=2 shiftwidth=2 expandtab

" Unmap <F1>
:map <F1> <Esc>
:imap <F1> <Esc>

"python with virtualenv support
py3 << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  with open(activate_this) as activate:
    exec(activate.read(), {"__file__": activate_this})
EOF

filetype indent on
syntax on
set foldmethod=syntax

" colorscheme
"colorscheme Tomorrow-Night-Bright
colorscheme badwolf

" vim-plug
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'tmhedberg/simpylfold'
Plug 'konfekt/fastfold'
call plug#end()

" ALE
let b:ale_linters = {
\  'python': ['pycodestyle', 'pylint', 'mypy', 'pytype'],
\}
let g:ale_python_pycodestyle_options = '--ignore=E402
\ --max-line-length=160'
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)

augroup BadWhitespace
  autocmd!
  autocmd BufRead,BufNewFile *.py,*.rst match BadWhitespace /*\t\*/
  autocmd BufRead,BufNewFile *.py,*.rst match BadWhitespace /\s\+$/
augroup END
highlight BadWhitespace ctermbg=red guibg=red
